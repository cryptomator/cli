name: Build

on:
  [push]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    #This check is case insensitive
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    outputs:
      artifact-version: ${{ steps.setversion.outputs.version }}
    env:
      BUILD_VERSION: SNAPSHOT
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 17
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Ensure to use tagged version
        run: mvn versions:set --file ./pom.xml -DnewVersion=${GITHUB_REF##*/} # use shell parameter expansion to strip of 'refs/tags'
        if: startsWith(github.ref, 'refs/tags/')
      - name: Export the project version to the job environment and fix it as an ouput of this job
        id: setversion
        run: |
          v=$(mvn help:evaluate "-Dexpression=project.version" -q -DforceStdout)
          echo "BUILD_VERSION=${v}" >> $GITHUB_ENV
      - name: Build and Test
        run: mvn -B install
      - name: Upload snapshot artifact cryptomator-cli-${{ env.BUILD_VERSION }}.jar
        uses: actions/upload-artifact@v2
        with:
          name: cryptomator-cli-${{ env.BUILD_VERSION }}.jar
          path: target/cryptomator-cli-*.jar

  release:
    name: Draft a Release on GitHub Releases and uploads the build artifacts to it
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download cryptomator-cli.jar
        uses: actions/download-artifact@v1
        with:
          name: cryptomator-cli-${{ needs.build.outputs.artifact-version }}.jar
          path: .
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            :construction: Work in Progress
          draft: true
          prerelease: false
      - name: Upload cryptomator-cli-${{ needs.build.outputs.artifact-version }}.jar to GitHub Releases
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: cryptomator-cli-${{ needs.build.outputs.artifact-version }}.jar
          asset_name: cryptomator-cli-${{ needs.build.outputs.artifact-version }}.jar
          asset_content_type: application/jar
